{"version":3,"file":"chrome-apps-serialport.min.js","sources":["../src/chrome-apps-serialport.js"],"sourcesContent":["\"use strict\";\n\nconst EE = require(\"events\").EventEmitter;\nconst util = require(\"util\");\n\nif (process && process.versions.nw && parseFloat(process.versions.nw) >= 0.13) {\n  require(\"nwjs-j5-fix\").fix(); // Fix issue with streams in NW.js\n}\n\nconst DATABITS = [7, 8];\nconst STOPBITS = [1, 2];\nconst PARITY = [\"none\", \"even\", \"mark\", \"odd\", \"space\"];\nconst FLOWCONTROLS = [\"RTSCTS\"];\n\nconst _options = {\n  baudrate: 9600,\n  parity: \"none\",\n  rtscts: false,\n  databits: 8,\n  stopbits: 1,\n  buffersize: 256\n};\n\n// This holds data that couldn't be sent (typically when trying to send while a send operation is\n// ongoing)\nlet _globalBuffer = new ArrayBuffer(0);\n\nfunction convertOptions(options){\n  switch (options.dataBits) {\n    case 7:\n      options.dataBits = \"seven\";\n      break;\n    case 8:\n      options.dataBits = \"eight\";\n      break;\n  }\n\n  switch (options.stopBits) {\n    case 1:\n      options.stopBits = \"one\";\n      break;\n    case 2:\n      options.stopBits = \"two\";\n      break;\n  }\n\n  switch (options.parity) {\n    case \"none\":\n      options.parity = \"no\";\n      break;\n  }\n\n  return options;\n}\n\nfunction SerialPort(path, options, callback) {\n\n  EE.call(this);\n\n  let self = this;\n\n  let args = Array.prototype.slice.call(arguments);\n  callback = args.pop();\n  if (typeof(callback) !== \"function\") {\n    callback = null;\n  }\n\n  options = (typeof options !== \"function\") && options || {};\n\n  if (options.autoOpen === undefined || options.autoOpen === null) {\n    options.autoOpen = true;\n  }\n\n  callback = callback || function (err) {\n    if (err) {\n      self.emit(\"error\", err);\n    }\n  };\n\n  let err;\n\n  options.baudRate = options.baudRate || options.baudrate || _options.baudrate;\n\n  options.dataBits = options.dataBits || options.databits || _options.databits;\n  if (DATABITS.indexOf(options.dataBits) === -1) {\n    err = new Error(\"Invalid \\\"databits\\\": \" + options.dataBits);\n    callback(err);\n    return;\n  }\n\n  options.stopBits = options.stopBits || options.stopbits || _options.stopbits;\n  if (STOPBITS.indexOf(options.stopBits) === -1) {\n    err = new Error(\"Invalid \\\"stopbits\\\": \" + options.stopbits);\n    callback(err);\n    return;\n  }\n\n  options.parity = options.parity || _options.parity;\n  if (PARITY.indexOf(options.parity) === -1) {\n    err = new Error(\"Invalid \\\"parity\\\": \" + options.parity);\n    callback(err);\n    return;\n  }\n\n  if (!path) {\n    err = new Error(\"Invalid port specified: \" + path);\n    callback(err);\n    return;\n  }\n\n  options.rtscts = _options.rtscts;\n\n  if (options.flowControl || options.flowcontrol) {\n    let fc = options.flowControl || options.flowcontrol;\n\n    if (typeof fc === \"boolean\") {\n      options.rtscts = true;\n    } else {\n      let clean = fc.every(function (flowControl) {\n        let fcup = flowControl.toUpperCase();\n        let idx = FLOWCONTROLS.indexOf(fcup);\n        if (idx < 0) {\n          let err = new Error(\"Invalid \\\"flowControl\\\": \" + fcup + \". Valid options: \" +\n            FLOWCONTROLS.join(\"\", \"\"));\n          callback(err);\n          return false;\n        } else {\n\n          // \"XON\", \"XOFF\", \"XANY\", \"DTRDTS\", \"RTSCTS\"\n          switch (idx) {\n            case 0: options.rtscts = true; break;\n          }\n          return true;\n        }\n      });\n      if(!clean){\n        return;\n      }\n    }\n  }\n\n  options.bufferSize = options.bufferSize || options.buffersize || _options.buffersize;\n\n  // defaults to chrome.serial if no options.serial passed\n  // inlined instead of on _options to allow mocking global chrome.serial for optional options test\n  options.serial = options.serial || (typeof chrome !== \"undefined\" && chrome.serial);\n\n  if (!options.serial) {\n    throw new Error(\"No access to serial ports. Try loading as a Chrome Application.\");\n  }\n\n  this.options = convertOptions(options);\n\n  this.options.serial.onReceiveError.addListener(function(info){\n\n    switch (info.error) {\n\n      case \"disconnected\":\n      case \"device_lost\":\n      case \"system_error\":\n        err = new Error(\"Disconnected\");\n        // send notification of disconnect\n        if (self.options.disconnectedCallback) {\n          self.options.disconnectedCallback(err);\n        } else {\n          self.emit(\"disconnect\", err);\n        }\n        if(self.connectionId >= 0){\n          self.close();\n        }\n        break;\n      case \"timeout\":\n        break;\n    }\n\n  });\n\n  this.path = path;\n  this.isOpen = false;\n  this.baudRate = this.options.baudRate;\n\n  if (options.autoOpen) {\n    process.nextTick(function () {\n      self.open(callback);\n    });\n  }\n\n}\n\nutil.inherits(SerialPort, EE);\n\nSerialPort.prototype.connectionId = -1;\n\nSerialPort.prototype.open = function (callback) {\n\n  let options = {\n    bitrate: parseInt(this.options.baudRate, 10),\n    dataBits: this.options.dataBits,\n    parityBit: this.options.parity,\n    stopBits: this.options.stopBits,\n    ctsFlowControl: this.options.rtscts\n  };\n\n  this.options.serial.connect(this.path, options, this.proxy(\"onOpen\", callback));\n\n};\n\nSerialPort.prototype.onOpen = function (callback, openInfo) {\n  if(chrome.runtime.lastError){\n    if(typeof callback === \"function\"){\n      callback(chrome.runtime.lastError);\n    }else{\n      this.emit(\"error\", chrome.runtime.lastError);\n    }\n    return;\n  }\n\n  this.connectionId = openInfo.connectionId;\n\n  if (this.connectionId === -1) {\n    this.emit(\"error\", new Error(\"Could not open port.\"));\n    return;\n  }\n\n  this.isOpen = true;\n  this.emit(\"open\", openInfo);\n\n  this._reader = this.proxy(\"onRead\");\n\n  this.options.serial.onReceive.addListener(this._reader);\n\n  if(typeof callback === \"function\"){\n    callback(chrome.runtime.lastError, openInfo);\n  }\n};\n\nSerialPort.prototype.onRead = function (readInfo) {\n  if (readInfo && this.connectionId === readInfo.connectionId) {\n\n    if (this.options.dataCallback) {\n      this.options.dataCallback(toBuffer(readInfo.data));\n    } else {\n      this.emit(\"data\", toBuffer(readInfo.data));\n    }\n\n  }\n};\n\nSerialPort.prototype.write = function (buffer, encoding = \"utf8\", callback = () => {}) {\n\n  // This is for backwards-compatibility (when \"encoding\" is omitted)\n  if (typeof encoding !== \"string\" && !(encoding instanceof String)) {\n    callback = encoding;\n    encoding = \"utf8\";\n  } else {\n    if (encoding !== \"utf8\") console.warn(\"Only utf8 encoding is supported for strings.\");\n  }\n\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if (typeof callback === \"function\") callback(err);\n    this.emit(\"error\", err);\n    return;\n  }\n\n  if (typeof buffer === \"string\") buffer = str2ab(buffer);\n\n  // chrome.serial needs an ArrayBuffer not a Buffer\n  if (!(buffer instanceof ArrayBuffer)) buffer = buffer2ArrayBuffer(buffer);\n\n  // If there is data from a previous failed send operation, merge it in and empty _globalBuffer\n  buffer = arrayBufferConcat(_globalBuffer, buffer);\n  _globalBuffer = new ArrayBuffer(0);\n\n  this.options.serial.send(this.connectionId, buffer, function(info) {\n\n    if (info.error === \"pending\") {\n      _globalBuffer = buffer;\n    }\n\n    if (typeof callback === \"function\") {\n      callback(chrome.runtime.lastError, info);\n    }\n  });\n\n};\n\n\nSerialPort.prototype.close = function (callback) {\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if(typeof callback === \"function\"){\n      callback(err);\n    }else{\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  this.options.serial.disconnect(this.connectionId, this.proxy(\"onClose\", callback));\n};\n\nSerialPort.prototype.onClose = function (callback, result) {\n  this.connectionId = -1;\n  this.isOpen = false;\n  this.emit(\"close\");\n\n  this.removeAllListeners();\n  if(this._reader){\n    this.options.serial.onReceive.removeListener(this._reader);\n    this._reader = null;\n  }\n\n  if (typeof callback === \"function\") {\n    callback(chrome.runtime.lastError, result);\n  }\n};\n\nSerialPort.prototype.flush = function (callback) {\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if(typeof callback === \"function\"){\n      callback(err);\n    }else{\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  let self = this;\n\n  this.options.serial.flush(this.connectionId, function(result) {\n    if (chrome.runtime.lastError) {\n      if (typeof callback === \"function\") {\n        callback(chrome.runtime.lastError, result);\n      } else {\n        self.emit(\"error\", chrome.runtime.lastError);\n      }\n    } else {\n      callback(null, result);\n    }\n  });\n};\n\nSerialPort.prototype.drain = function (callback) {\n\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if (typeof callback === \"function\") {\n      callback(err);\n    } else {\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  if (typeof callback === \"function\") {\n    callback();\n  }\n\n};\n\nSerialPort.prototype.pause = function (callback) {\n\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if (typeof callback === \"function\") {\n      callback(err);\n    } else {\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  this.options.serial.setPaused(this.connectionId, true, callback);\n\n};\n\nSerialPort.prototype.resume = function (callback) {\n\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if (typeof callback === \"function\") {\n      callback(err);\n    } else {\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  this.options.serial.setPaused(this.connectionId, false, callback);\n\n};\n\nSerialPort.prototype.update = function (options = {}, callback = () => {}) {\n\n  if (this.connectionId < 0) {\n    this.isOpen = false;\n    let err = new Error(\"Serialport not open.\");\n    if (typeof callback === \"function\") {\n      callback(err);\n    } else {\n      this.emit(\"error\", err);\n    }\n    return;\n  }\n\n  this.options.serial.update(this.connectionId, {bitrate: options.baudRate}, callback);\n\n};\n\n\nSerialPort.prototype.proxy = function () {\n  let self = this;\n  let proxyArgs = [];\n\n  //arguments isnt actually an array.\n  for (let i = 0; i < arguments.length; i++) {\n    proxyArgs[i] = arguments[i];\n  }\n\n  let functionName = proxyArgs.splice(0, 1)[0];\n\n  return function() {\n    let funcArgs = [];\n    for (let i = 0; i < arguments.length; i++) {\n      funcArgs[i] = arguments[i];\n    }\n    let allArgs = proxyArgs.concat(funcArgs);\n\n    self[functionName].apply(self, allArgs);\n  };\n\n};\n\nSerialPort.prototype.set = function (options, callback) {\n  this.options.serial.setControlSignals(this.connectionId, options, function(result){\n    callback(chrome.runtime.lastError, result);\n  });\n};\n\nSerialPort.prototype.get = function (options, callback) {\n  this.options.serial.getControlSignals(this.connectionId, function(signals){\n    callback(chrome.runtime.lastError, signals);\n  });\n};\n\nSerialPort.list = async function(callback) {\n\n  if (typeof chrome != \"undefined\" && chrome.serial) {\n\n    return new Promise(resolve => {\n\n      chrome.serial.getDevices(function(ports) {\n\n        let portObjects = new Array(ports.length);\n\n        for (let i = 0; i < ports.length; i++) {\n          portObjects[i] = {\n            comName: ports[i].path, // backwards-compatibility with older versions of serialport\n            path: ports[i].path,\n            manufacturer: ports[i].displayName,\n            serialNumber: \"\",\n            pnpId: \"\",\n            locationId:\"\",\n            vendorId: \"0x\" + (ports[i].vendorId||0).toString(16),\n            productId: \"0x\" + (ports[i].productId||0).toString(16)\n          };\n        }\n\n        if (typeof callback === \"function\") callback(chrome.runtime.lastError, portObjects);\n        resolve(portObjects);\n\n      });\n\n    });\n\n  } else {\n    let error = new Error(\"No access to serial ports. Try loading as a Chrome Application.\");\n    callback(error, null);\n    return Promise.reject(error);\n  }\n\n};\n\n// Convert string to ArrayBuffer\nfunction str2ab(str) {\n  let buf = new ArrayBuffer(str.length);\n  let bufView = new Uint8Array(buf);\n  for (let i = 0; i < str.length; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n// Convert buffer to ArrayBuffer\nfunction buffer2ArrayBuffer(buffer) {\n  let buf = new ArrayBuffer(buffer.length);\n  let bufView = new Uint8Array(buf);\n  for (let i = 0; i < buffer.length; i++) {\n    bufView[i] = buffer[i];\n  }\n  return buf;\n}\n\nfunction toBuffer(ab) {\n  let buffer = new Buffer(ab.byteLength);\n  let view = new Uint8Array(ab);\n  for (let i = 0; i < buffer.length; ++i) {\n    buffer[i] = view[i];\n  }\n  return buffer;\n}\n\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/*\n MIT license\n\n Copyright (C) 2015 Miguel Mota\n\n Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n associated documentation files (the \"Software\"), to deal in the Software without restriction,\n including without limitation the rights to use, copy, modify, merge, publish, distribute,\n sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all copies or\n substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nfunction isValidArray(x) {\n  return /Int(8|16|32)Array|Uint(8|8Clamped|16|32)Array|Float(32|64)Array|ArrayBuffer/gi.test(\n    {}.toString.call(x)\n  );\n}\n\nfunction arrayBufferConcat(/* arraybuffers */) {\n\n  let arrays = [].slice.call(arguments);\n\n  if (arrays.length <= 0 || !isValidArray(arrays[0])) {\n    return new Uint8Array(0).buffer;\n  }\n\n  let arrayBuffer = arrays.reduce(function(cbuf, buf, i) {\n\n    if (i === 0) return cbuf;\n    if (!isValidArray(buf)) return cbuf;\n\n    let tmp = new Uint8Array(cbuf.byteLength + buf.byteLength);\n    tmp.set(new Uint8Array(cbuf), 0);\n    tmp.set(new Uint8Array(buf), cbuf.byteLength);\n\n    return tmp.buffer;\n\n  }, arrays[0]);\n\n  return arrayBuffer;\n\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n\nmodule.exports = {\n  SerialPort: SerialPort,\n  list: SerialPort.list, // this is for backwards-compatibility\n  buffer2ArrayBuffer: buffer2ArrayBuffer,\n  used: [] //Populate this somewhere!!\n};\n"],"names":["EE","require","EventEmitter","util","process","versions","nw","parseFloat","fix","DATABITS","STOPBITS","PARITY","FLOWCONTROLS","_options","_globalBuffer","ArrayBuffer","convertOptions","options","dataBits","stopBits","parity","SerialPort","path","callback","call","this","err","self","args","Array","prototype","slice","arguments","pop","undefined","autoOpen","emit","baudRate","baudrate","databits","indexOf","Error","stopbits","rtscts","flowControl","flowcontrol","fc","every","fcup","toUpperCase","idx","join","bufferSize","buffersize","serial","chrome","onReceiveError","addListener","info","error","disconnectedCallback","connectionId","close","isOpen","nextTick","open","buffer2ArrayBuffer","buffer","buf","length","bufView","Uint8Array","i","toBuffer","ab","Buffer","byteLength","view","isValidArray","x","test","toString","inherits","bitrate","parseInt","parityBit","ctsFlowControl","connect","proxy","onOpen","openInfo","runtime","lastError","_reader","onReceive","onRead","readInfo","dataCallback","data","write","encoding","String","console","warn","str","charCodeAt","str2ab","arrays","arrayBuffer","reduce","cbuf","tmp","set","arrayBufferConcat","send","disconnect","onClose","result","removeAllListeners","removeListener","flush","drain","pause","setPaused","resume","update","proxyArgs","functionName","splice","funcArgs","allArgs","concat","apply","setControlSignals","get","getControlSignals","signals","list","async","Promise","resolve","getDevices","ports","portObjects","comName","manufacturer","displayName","serialNumber","pnpId","locationId","vendorId","productId","reject","module","exports","used"],"mappings":"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"}